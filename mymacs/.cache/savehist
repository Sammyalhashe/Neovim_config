;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(xref--read-identifier-history helm-grep-history helm-make-target-history org-read-date-history compile-history evil-ex-search-history ido-file-history shell-command-history grep-regexp-history helm-M-x-input-history helm-ag--helm-history minibuffer-history file-name-history ivy-history evil-ex-history))
(setq org-read-date-history '("5h    " "1d    " "1w    " "iw    " "6h    " "5h    " "tommorow    " "   "))
(setq compile-history '("./gradlew build" "\"/Users/sammyalhashemi/Library/Application Support/JetBrains/Toolbox/apps/CLion/ch-0/193.6015.37/CLion.app/Contents/bin/cmake/mac/bin/cmake\" -DCMAKE_BUILD_TYPE=Debug -G \"CodeBlocks - Unix Makefiles\" /Users/sammyalhashemi/CLionProjects/NESEmulator" "relaxed resume.pug" "loadnvm && relaxed resume.pug" "relaxed resume.pug"))
(setq evil-ex-search-history '("monochrome" "nord" "color" "theme" "font" "sort di" "sort" "nord" "user-config" "lsp-ui" "user-config" "wave" "mode-line" "character mode" "word count" "ADD_HL" "ADD_HL_REG" "ADD_HL" "INCREMEN" "react" "LDI" "LDD" "LDI" "LDD" "LDI" "user-config" "react-mode" "user-config" "user-conf" "python" "wave" "default-font" "doom" "modeline" "nord" "default" "after-insert" "escape-quotes" "spoti" "spotid" "selec" "'spacemacs" "wave" "powerline" "mode line" "gruvbox" "theme" "ns-auto-hide-menu-bar" "add_hl_hl" "Get" "get" "gruvbox" "default-separator" "spacemacs" "spotify" "counsel" "spotif" "powerline" "layers" "colors" "font" "INC_H" "cour" "books" "softwa" "fac" "themes" "use-package" "exec-path" "dotspacemacs-check" "exec-path-from-shell" "switch" "font" "lsp-ui" "/java" "gradle" "java" "treemacs-persp" "java" "Angular" "skills" "java" "user-config" "user-conf" "error" "font" "ana" "font" "nord" "'space" "spacemacs" "vanilla" "all-the" "org-enable" "setq-default dotspacemacs" "configuration-layers" "'space" "spacemacs" "powerline" "java" "lsp" "flycheck" "spacemacs-mode-" "spacemacs-mode" "spacemacs-mode-line-theme" "Hash"))
(setq shell-command-history '("ls"))
(setq helm-M-x-input-history '("tree" "insta" "describe-ses" "spo" "packa" "spoti" "spot" "spo" "spot" "spo" "tetr" "cust" #("----------------------------------------------------------------" 0 64 (face font-lock-comment-face fontified nil)) "pack" "packa" "spo" #("configuration." 0 14 (face font-lock-doc-face fontified t)) "spotify" "spot" "spo" "spot" "feature" "spot" #("spotify" 0 7 (fontified t face font-lock-constant-face)) "spo" "sp" "spotify-to" "packa" "spo" "package-de" "package " "spot" "packa" "spoti" "agenda" "cu" "customize-var" "agenda" "org-emp" "org-em" "lsp" "ena" #("Solution" 0 8 (fontified t)) "gra" #("dotspacemacs-configuration-layers" 0 33 (fontified t)) "lsp" "mvnw" #("private" 0 7 (fontified t face font-lock-keyword-face)) "company-co" "packa" "lsp" "gradle-bui" "grad" "gradl" "meghanada-re" "meghanada-server" "meghanada-mode" "meghanada-up" "meghanada ser" "insta" "package-aut" "packa" "instal" "install" "git"))
(setq helm-ag--helm-history '("Critical" "CriticalPath"))
(setq minibuffer-history '("pyq" "plusMinus.py" "java" "alice" "cro" "pyq" "womb" "tang" "longes" "stack" "java" "mon" "space" "moo" "hanoi" "java" #("color" 0 5 (face font-lock-comment-face fontified t)) "space" "atom" #("spacemacs-light" 0 15 (fontified t)) #("nord" 0 4 (fontified t)) #("Emacs" 0 5 (face font-lock-comment-face fontified t)) #("spacemacs-dark" 0 14 (fontified t)) "les" "we" #("gruvbox" 0 7 (fontified nil)) "/Users/sammyalhashemi/Desktop/pyquestions/close" "whiteb" "targe" "target" #("StringIO" 0 8 (fontified t)) "fre" "atom" "recur" "out" "P" "webs" "one" "/Users/sammyalhashemi/Desktop/website/pages/inde" "prevd" "one" "on" #("def" 0 3 (face font-lock-keyword-face fontified t)) "on" "linked" "white" #("while" 0 5 (face font-lock-keyword-face fontified t)) #("spacemacs-dark" 0 14 (fontified t)) "one" "hanoi" "dy" "max_sum" "dyna" "dyn" "out" "dynam" "homewor 05" "tw" "homework 04" "Left" "homesolu" "whiteb" "white" "whitebao" #("n" 0 1 (fontified t)) "han" #("859900" 0 6 (fontified t face font-lock-string-face)) "gru" "c_map" "no" "cpu" "lsp" "cpu" #("BlogList" 0 8 (fontified t)) "prettier" "rjsx" "blog" #("powerline-default-separator" 0 27 (fontified nil)) "rjs" "blog" "╋╋╋╋╋╋╋╋╋┃┃" "blog" "/Users/sammyalhashemi/Desktop/website/pages/index.js" "export" "blog" "╋╋╋╋╋╋╋╋╋┃┃" "blog" "╋╋╋╋╋╋╋╋╋┃┃" #("log" 0 3 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face js2-object-property-access fontified t)) "/Users/sammyalhashemi/Desktop/website/" #("python" 0 6 (fontified t)) "┗━━┓┃┏━━┓┃┏┓┃┏━━┓┃┏┓┃┏━━┓┃┏━┛┏━━┓┃┃━┫┏━━┓┃┗┛┃┏━━┓┃┏┓┃┏━━┓┃┏━┛┏━━┓┃━━┫" "╋╋╋╋╋╋╋╋╋┃┃" "hano" "╋╋╋╋╋╋╋╋╋┃┃" "The" "Command" "┗━━┓┃┏━━┓┃┏┓┃┏━━┓┃┏┓┃┏━━┓┃┏━┛┏━━┓┃┃━┫┏━━┓┃┗┛┃┏━━┓┃┏┓┃┏━━┓┃┏━┛┏━━┓┃━━┫" "╋╋╋╋╋╋╋╋╋┃┃" "hanoi" "jav" "white" "╋╋╋╋╋╋╋╋╋┃┃" "white" "╋╋╋╋╋╋╋╋╋┃┃" "white" "╋╋╋╋╋╋╋╋╋┃┃" "/Users/sammyalhashemi/Desktop/website/" "/Users/sammyalhashemi/Desktop/website/pages/" "/Users/sammyalhashemi/Desktop/website/components/" "whiteboar" "wide" "/Users/sammyalhashemi/Desktop/outcode-69-python-Sammyalhashe/" "╋╋╋╋╋╋╋╋╋┃┃" "/Users/sammyalhashemi/Desktop/o" #("toString" 0 8 (fontified t)) "open" "opens" "open" "╋╋╋╋╋╋╋╋╋┃┃" "openParensTest" "src/test/java/Javaquestions/Ch0/OpenParensTest.java" #("final" 0 5 (fontified t face font-lock-keyword-face)) #("char" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face)) "src/main/Javaquestions/Ch0/OpenParens.java" "java" "cpu" "nes" "han" "╋╋╋╋╋╋╋╋╋┃┃" "han" "src/main/java/Javaquestions/Ch0/BreakPalindrome.java" "java" "stairway" "cpu" "nes" "criti" "sch" "first" "java" "min" "space" "gruv" "gr" "gru" "pair" "fitst" "firstLastTest" "pair" "firstLastTest" "fi" "╋╋╋╋╋╋╋╋╋┃┃" #("Comparable" 0 10 (fontified t face font-lock-type-face)) "firstLastTEst" "Pair" "firstLastTest" "/Users/sammyalhashemi/Desktop/javaquestions/src/test/java/Javaquestions/Ch0/FirstLastTest.java" "min" "src/main/java/Javaquestions/Ch0/firstLastIndexSorted.java" "space" "nr" "nor" "han" "gru" "no" "gruv" "gru" "space" "gr" "cpu" "clapin" #("----------------------------------------------------------------" 0 64 (face font-lock-comment-face fontified nil)) "plat" "cpu" "read" "gru" "mini" "cpu" "N" "min" "mini" "min" "cp" "nes" "min" "minima" "mono" "monoch" "ozzy" "feature" #("b25aef01ae324dc68a779d0b25178f07" 0 31 (fontified t face font-lock-string-face) 31 32 (fontified t rear-nonsticky t face font-lock-string-face)) "asdf" #("return" 0 6 (fontified t face font-lock-keyword-face)) "justin bieber" "helm-spo" #("CPU" 0 3 (fontified t face font-lock-constant-face)) "solar" "cpu" "nes" "mon" "mono" #("mess" 0 4 (face font-lock-comment-face fontified nil)) "justin bieber" "cp" "nes" "space" #("You" 0 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) #("-" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) "githu" "mes" "colo" "co" "cpu" "colo" #("*Note" 0 1 (invisible spacemacs--space-doc-invisible-marker org-emphasis t font-lock-multiline t face (bold) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 5 (org-emphasis t font-lock-multiline t face (bold) wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) #("configuration." 0 14 (face font-lock-doc-face fontified nil)) "cpu" "cp" "cpu" "res" "resear" "mic" "gam" "micro" "musi" "resume" "/Users/sammyalhashemi/Documents/resume/Markdown/gameboy.md" "the" "res" "ms" "res" #("import" 0 6 (fontified t face font-lock-keyword-face)) "longes" "cpu" "nes" "hano" "g" #("res" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) "test -i" "testInsertAndSearch" "/Users/sammyalhashemi/Desktop/javaquestions/src/test/java/Javaquestions/Ch0/TrieTest.java" "man" "/Users/sammyalhashemi/Desktop/javaquestions/src/main/java/Javaquestions/Ch0/Trie.java" "hano" #("*" 0 1 (fontified t org-category "README" composition (0 1 [9673]) keymap (keymap) face org-level-1)) "origin" "heap" "py" "ls" "cpu" "spacemacs" "lined" "/Users/sammyalhashemi/Desktop/c/TestProj/linkedlist.cpp" #("second" 0 6 (fontified t)) "testNumBinaryDigits" "/Users/sammyalhashemi/Desktop/javaquestions/src/main/java/Javaquestions/Common/Pair.java" "test -i" "testNumBinaryDigits" "/Users/sammyalhashemi/Desktop/javaquestions/src/test/java/Javaquestions/Ch0/NumBinaryDigitsTest.java" "/Users/sammyalhashemi/Desktop/javaquestions/src/main/java/Javaquestions/Ch0/NumBinaryDigits.java" "hano" "java" "inde" "stand" "cpu" #("s" 0 1 (face font-lock-variable-name-face fontified t)) "longe" "cpu" "nes" "longes" "merge" "test -i" "/Users/sammyalhashemi/Desktop/javaquestions/src/test/java/Javaquestions/Ch0/LongestStringChainTest.java" #("res" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) "nor" "longest" "/Users/sammyalhashemi/Desktop/javaquestions/src/main/java/Javaquestions/Ch0/LongestStringChain.java" "ch0" "java" "Ch0" "java" "cp" "CPU" "bus" "lsp" "bus" #("OPCODES" 0 7 (fontified t org-category "PrimaryAgenda" org-todo-head "TODO" face org-level-3)) "/Users/sammyalhashemi/Desktop/" "cp" "mes" "cp" "cpu" "You" "mes" "cpu" #("LD_BC_nn" 0 8 (face font-lock-function-name-face fontified t)) "CP" #("***" 0 2 (org-category "PrimaryAgenda" keymap (keymap) face (:foreground "#292b2e") fontified t) 2 3 (org-category "PrimaryAgenda" face org-level-3 keymap (keymap) composition (2 1 [10040]) fontified t)) "/Users/sammyalhashemi/Desktop/PrimaryAgenda.org" "Unpre" "README.org" "cpu" "Cpu.h" "lastNode" #("MergeSortedLinkedLists" 0 22 (fontified t)) #("nextNode" 0 8 (fontified t)) "merge" "mergeLinkedTest" "Merge" #("Color" 0 5 (fontified t)) "mergeLinkedTest" #("protected" 0 9 (fontified t face font-lock-keyword-face)) #("List" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face)) "mer" #("tmp" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) #("15-Feb-2020" 0 11 (face underline)) #("public" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face)) #("lsp-java-boot-lens-mode" 0 23 (fontified t)) #("nil" 0 3 (fontified t)) "mergeTest" "/Users/sammyalhashemi/Desktop/javaquestions/src/test/java/Javaquestions/Ch0/MergeSortedListsTest.java" #("4" 0 1 (fontified t face highlight-numbers-number)) #("res" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) "/Users/sammyalhashemi/Desktop/javaquestions/src/test/java/Javaquestions/Ch0/MergeSortedLists.java" "Stack" "Link" "src/main/java/Javaquestions/Ch0/MergeSortedLists.java" "hano" #("Packages" 0 8 (face font-lock-keyword-face)) "cpu" "ne" "hano" "java" #("<M-m" 0 4 (face font-lock-comment-face fontified nil)) "This" "A" "pug" "res" "cla" #("haskell" 0 7 (fontified nil)) "clapp" #("import" 0 6 (face font-lock-keyword-face fontified t)) "clapi" "mus" "sche" #("CPU" 0 3 (face font-lock-constant-face fontified t)) "c" #("Solution" 0 8 (fontified t)) #("final" 0 5 (face font-lock-keyword-face fontified t)) #("Stack" 0 5 (face font-lock-type-face fontified t)) #("dest" 0 4 (fontified t)) #("Stack" 0 5 (face font-lock-type-face fontified t)) "han" #("dotspacemacs-configuration-layers" 0 33 (fontified nil)) "Stac" "han" #("Release" 0 7 (face font-lock-preprocessor-face)) "lsp-java" "mess" #("Hashmap" 0 7 (mouse-face highlight dired-filename t help-echo "mouse-2: visit this file in other window" fontified t)) "cp" "spacemacs" "hano" "Error" #("Packages" 0 8 (face font-lock-keyword-face)) #("Javaquestions" 0 13 (fontified t face font-lock-constant-face)) "\312\376\272\276" "han" "Error" #("Javaquestions" 0 13 (face font-lock-constant-face fontified t)) "spacemacs" "han" "hanoi" #("if" 0 2 (face font-lock-keyword-face fontified t)) "Linked" "/Users/sammyalhashemi/Desktop/javaquestions/src/main/java/Javaquestions/Ch1/Hanoi.java" "resume.pug" "atp" "char" "micro" "mic" "micro" "micr" "mic" "../resume.pdf" "ms.md" "res" #("mapped" 0 6 (markdown-list-item ((398 539 0 2 "* " nil (398 400 398 398 398 399 399 400))) fontified t)) #("lsp" 0 3 (fontified t)) "ms" "resume.pu" "/Users/sammyalhashemi/Desktop/website/pages/index.js" "void" "cri" "mess" "mesa" "/Users/sammyalhashemi/Desktop/pyquestions/rot" "mes" "/Users/sammyalhashemi/Desktop/pyquestions/amica" "/Users/sammyalhashemi/Desktop/pyquestions/longestSubsequence.py" "/Users/sammyalhashemi/Desktop/pyquestions/longe" "/Users/sammyalhashemi/Desktop/pyquestions/long" "/Users/sammyalhashemi/Desktop/pyquestions/is" "/Users/sammyalhashemi/Desktop/pyquestions/org" "/Users/sammyalhashemi/Desktop/pyquestions/abs" "/Users/sammyalhashemi/Desktop/pyquestions/lon" "index" "space" "/Users/sammyalhashemi/Desktop/pyquestions/longe" "space" "/Users/sammyalhashemi/Desktop/pyquestions/crossword.py" "mes" "space" "Task" "sc" "Heap" "py" "Taskj" "sce" "Task" "sce" "/Users/sammyalhashemi/Desktop/PyHeap/PyHeap/Heap" "gradle test" "mes" "evil-line-move" "sce" "mes" "l" "sc" "/Users/sammyalhashemi/Documents/ATPScraper/ATPScraper/" "PayerPage" "A" "Payer" "Player" "at" "Play" "at" "0.200.13" "WinL" "/Users/sammyalhashemi/Documents/ATPScraper/ATPScraper/" #("dotspacemacs-configuration-layers" 0 33 (fontified t)) "A" "meg" "megha" "Cri" "sc" "megh" "me" "mess" "Task" "File" "mess" "space" "Critijaa" "build" "Sce" "lsp-" "mess" "jdtls" "sc" "Task" "sce" "build" "server" "serve" "C" "meg" "Crit" "Cri" "sce" "me" "Cri" "Task" "S" "Task" "Sche" "Tas" "Sce" "megh" "font" "font-sh" "Task.ja" "megha" "I" "Task" #("java-backend" 0 12 (fontified nil)) "java" "Criti" "meg" "nor" "space" "womb" "/Users/sammyalhashemi/Desktop/pyquestions/amicable.py" "/Users/sammyalhashemi/Documents/ATPScraper/ATPScraper/scraper/" "Cri" "Sch" "cla" "/Users/sammyalhashemi/Documents/MusicLEDStrip/clapper/clapper.ino" "auto-completion" "autp" " Cri" "Task" "/Users/sammyalhashemi/Documents/Scheduler/" "App" "/Users/sammyalhashemi/Documents/Scheduler/src/test/java/com/Scheduler/App" "/Users/sammyalhashemi/Desktop/pyquestions/test" "Cri" "Sce" "nord" "/Users/sammyalhashemi/Documents/Scheduler/src/main/java/com/Scheduler/CriticalPath/CriticalPath.java" "~/Doc"))
(setq file-name-history '("~/Desktop/pyquestions/closesKNoHeap.py" "~/Desktop/website/pages/index.jsx" "~/Desktop/website/pages/index.js" "~/Desktop/website/components/blogList.js" "~/Desktop/c/TestProj/linkedlist.cpp" "~/Desktop/PrimaryAgenda.org" "~/Desktop/javaquestions/src/main/java/Javaquestions/Ch1/Hanoi.java" #("~/Documents/ATPScraper/ATPScraper/scraper/Tests.py" 1 2 (match-part "/Users/sammyalhashemi/Documents/ATPScraper/ATPScraper/scraper/Tests.py") 2 50 (match-part "/Users/sammyalhashemi/Documents/ATPScraper/ATPScraper/scraper/Tests.py")) "~/Desktop/pyquestions/rotateMatrix.py" "~/Desktop/pyquestions/amicable.py" "~/Desktop/pyquestions/longestSubsequence.py" "~/Desktop/pyquestions/isPalindrome.py" "~/Desktop/pyquestions/surfaceArea.org" "~/Desktop/pyquestions/absSort.py" "~/Desktop/pyquestions/crossword.py" "~/Desktop/PyHeap/PyHeap/Heap.py" "~/Documents/ATPScraper/ATPScraper/scraper/Parser.py" "~/Documents/MusicLEDStrip/clapper/clapper.ino" "~/Documents/Scheduler/src/test/java/com/Scheduler/AppTest.java" "~/Desktop/pyquestions/tester.py" "~/Documents/Scheduler/src/main/java/com/Scheduler/CriticalPath/CriticalPath.java" #("/Users/sammyalhashemi/Documents/ATPScraper/" 0 43 (ivy-index 0)) #("/Users/sammyalhashemi/Documents/" 0 32 (ivy-index 0)) "~/.spacemacs" "~/.emacs.d/.cache/layouts/persp-auto-save"))
(setq evil-ex-history '(#("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("Q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("Q" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("Q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("Q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("Fold" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4)) #("fold" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("vsp" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("vsp" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #(":w" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("vsp" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("prettier-js" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11)) #("w" 0 1 (ex-index 1)) #("rjsx-mode" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("rjsx-mode" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("react-mode" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("vsp" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("Q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("vsp" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("color" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("vsp " 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("2" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("'<,'>w" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("color" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("1" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("test" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("Q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("vsp" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("vsp" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("fold" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("vsp" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("vsp" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("Q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("!{open ../resume.pdf}" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21)) #("!{open resume.pdf}" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("vsp" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("'<,'>q" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("color " 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("e rotateMatrix.py" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e surfaceArea.py" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e surfaceArea.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("Q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("color" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5)) #("q" 0 1 (ex-index 1)) #("e sherlock.py" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("Q" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("Q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("font-show-log" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13)) #("font" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("Q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("vsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("q" 0 1 (ex-index 1)) #("split" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("Q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2))))
(setq evil-jumps-history '((478 "/Users/sammyalhashemi/Desktop/pyquestions/Closest_k_points.py") (336 "/Users/sammyalhashemi/Desktop/pyquestions/plusMinus.py") (454 "/Users/sammyalhashemi/Desktop/pyquestions/AliceScores.py") (360 "/Users/sammyalhashemi/Desktop/pyquestions/AliceScores.py") (296 "/Users/sammyalhashemi/Desktop/pyquestions/AliceScores.py") (1712 "/Users/sammyalhashemi/Desktop/pyquestions/AliceScores.py") (57 "/Users/sammyalhashemi/Desktop/pyquestions/AliceScores.py") (1 "/Users/sammyalhashemi/Desktop/pyquestions/AliceScores.py") (4839 "/Users/sammyalhashemi/Desktop/pyquestions/crossword.py") (48 "/Users/sammyalhashemi/Desktop/pyquestions/crossword.py") (551 "/Users/sammyalhashemi/Desktop/pyquestions/crossword.py") (1302 "/Users/sammyalhashemi/Desktop/pyquestions/crossword.py") (1486 "/Users/sammyalhashemi/Desktop/pyquestions/crossword.py") (1495 "/Users/sammyalhashemi/Desktop/javaquestions/src/main/java/Javaquestions/Ch0/LongestStringChain.java") (1660 "/Users/sammyalhashemi/Desktop/javaquestions/src/main/java/Javaquestions/Ch0/LongestStringChain.java") (1853 "/Users/sammyalhashemi/Desktop/javaquestions/src/main/java/Javaquestions/Ch0/LongestStringChain.java") (2568 "/Users/sammyalhashemi/Desktop/javaquestions/src/main/java/Javaquestions/Ch0/LongestStringChain.java") (2641 "/Users/sammyalhashemi/Desktop/javaquestions/src/main/java/Javaquestions/Ch0/LongestStringChain.java") (1046 "/Users/sammyalhashemi/Desktop/javaquestions/src/main/java/Javaquestions/Ch0/LongestStringChain.java") (1017 "/Users/sammyalhashemi/Desktop/javaquestions/src/main/java/Javaquestions/Ch0/LongestStringChain.java") (1766 "/Users/sammyalhashemi/Desktop/javaquestions/src/main/java/Javaquestions/Ch0/LongestStringChain.java") (478 "/Users/sammyalhashemi/Desktop/javaquestions/src/main/java/Javaquestions/Ch1/Stack.java") (516 "/Users/sammyalhashemi/Desktop/javaquestions/src/main/java/Javaquestions/Ch1/Stack.java") (573 "/Users/sammyalhashemi/Desktop/javaquestions/src/main/java/Javaquestions/Ch1/Stack.java") (1880 "/Users/sammyalhashemi/Desktop/javaquestions/src/main/java/Javaquestions/Ch1/Stack.java") (1160 "/Users/sammyalhashemi/Desktop/javaquestions/src/main/java/Javaquestions/Ch1/Stack.java") (7249 "/Users/sammyalhashemi/.spacemacs") (6993 "/Users/sammyalhashemi/.spacemacs") (6764 "/Users/sammyalhashemi/.spacemacs") (6859 "/Users/sammyalhashemi/.spacemacs") (26475 "/Users/sammyalhashemi/.spacemacs") (1 "/Users/sammyalhashemi/.spacemacs")))
(setq mark-ring 'nil)
(setq search-ring '("edit" "split"))
(setq regexp-search-ring '("\\<pass\\>" "\\<uint8_t\\>" "layers" "font" "size" "font" "user-config" "font" "eclim" "java" "Directory Local" "java" "font" "git" "company" "dotspacemacs/user"))
(setq extended-command-history '("package-install" "treemacs" "lsp-describe-session" "spotify-toggle-play" "spotify-player-status" "spotify-volume-up" "spotify-recently-played" "spotify-next-track" "spotify-track-select" "tetris" "customize" "spotify-track-search" "helm-spotify-plus" "package-delete" "package-autoremove" "spotify-next" "spacemacs/org-agenda-transient-state/org-agenda-todo" "customize-variable" "org-emphasize" "lsp-ui-peek-mode" "enable-theme" "lsp" "meghanada-restart" "company-complete" "gradle-build" "gradle-mode" "meghanada-server-start" "meghanada-mode" "meghanada-update-server"))
