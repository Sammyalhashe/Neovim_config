package Javaquestions.Ch0;

public class BreakPalindrome {

    public static String bp(final String palString) {
        final int n = palString.length();
        if (n == 1) {
            return "";
        }

        final char[] cs = new char[n];
        for (int i = 0; i < n; i++)
            cs[i] = palString.charAt(i);

        // go through the string
        int j;
        // you only really need to check half of the string
        // this is because our input ins already constrained to be a palindrome
        for (int i = 0; i < n / 2; i++) {
            j = n - i - 1; // from the end
            // if we replace the middle character of an odd-lengthed string, it's still a palindrome
            if (i == j) {
                continue;
            }

            if (cs[i] != 'a') {
                cs[i] = 'b';
                return cs.toString();
            }
        }
        cs[n - 1] = 'b';
        return cs.toString();
    }
}
